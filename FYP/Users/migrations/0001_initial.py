# Generated by Django 3.2.13 on 2022-04-27 08:33

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer', models.BooleanField(default=True, verbose_name='trainer')),
                ('gender', models.CharField(blank=True, default='Male', max_length=6)),
                ('trainer_image', models.ImageField(default='profile_pics/squat.webp', upload_to='profile_pics/')),
                ('qualification', models.TextField(blank=True, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trainers',
                'verbose_name_plural': 'Trainers',
                'db_table': 'Trainer',
            },
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainee', models.BooleanField(default=True, verbose_name='trainee')),
                ('trainee_image', models.ImageField(default='profile_pics/squat.webp', upload_to='profile_pics/')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, default='Male', max_length=6)),
                ('current_weight', models.DecimalField(blank=True, decimal_places=1, max_digits=100, null=True)),
                ('goal_weight', models.DecimalField(blank=True, decimal_places=1, max_digits=100, null=True)),
                ('body_fat', models.IntegerField(blank=True, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=1, max_digits=100, null=True)),
                ('trainee_level', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_type_of_workout', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_form_of_workout', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_days_of_workout', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_number_of_meals', models.CharField(blank=True, max_length=100, null=True)),
                ('body_goal', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_supplements', models.CharField(blank=True, max_length=100, null=True)),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Users.trainer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trainees',
                'verbose_name_plural': 'Trainees',
                'db_table': 'Trainees',
            },
        ),
    ]
